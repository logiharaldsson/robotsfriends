{"ast":null,"code":"var _jsxFileName = \"/Users/logiharaldsson/Desktop/hooks-testing/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Fragment } from 'react/cjs/react.production.min';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState({\n    hits: []\n  });\n  const [query, setQuery] = useState('redux'); // const [ search, setSearch ] = useState('');\n\n  const [url, setUrl] = useState('https://hn.algolia.com/api/v1/search?query=redux');\n  const [isLoading, setIsLoading] = useState(false); // Why we don't have useEffect as async function...\n  // Warning: useEffect function must return a cleanup function or nothing. Promises and useEffect(async () => ...) are not supported, but you can call an async function inside an effect..\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true); // REST http request\n\n      const results = await axios(url);\n      setData(results.data);\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, [url]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      placeholder: \"Search\",\n      onChange: event => setQuery(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => setUrl(`https://hn.algolia.com/api/v1/search?query=${query}`),\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: data.hits.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: item.url,\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)\n      }, item.objectID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"waFr3LpSOZF/jkL5RRZqVCby9FY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/logiharaldsson/Desktop/hooks-testing/src/App.js"],"names":["React","useState","useEffect","axios","Fragment","App","data","setData","hits","query","setQuery","url","setUrl","isLoading","setIsLoading","fetchData","results","event","target","value","map","item","title","objectID"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gCAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBN,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAlC;AACA,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBT,QAAQ,CAAC,OAAD,CAApC,CAFa,CAGb;;AACA,QAAM,CAAEU,GAAF,EAAOC,MAAP,IAAkBX,QAAQ,CAAC,kDAAD,CAAhC;AAEA,QAAK,CAAEY,SAAF,EAAaC,YAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA3C,CANa,CAQb;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,SAAS,GAAG,YAAY;AAC5BD,MAAAA,YAAY,CAAC,IAAD,CAAZ,CAD4B,CAG5B;;AACA,YAAME,OAAO,GAAG,MAAMb,KAAK,CAACQ,GAAD,CAA3B;AAEAJ,MAAAA,OAAO,CAACS,OAAO,CAACV,IAAT,CAAP;AACAQ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KARD;;AAWAC,IAAAA,SAAS;AACV,GAbQ,EAaP,CAACJ,GAAD,CAbO,CAAT;AAeA,sBACE,QAAC,QAAD;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEF,KAFT;AAGE,MAAA,WAAW,EAAC,QAHd;AAIE,MAAA,QAAQ,EAAEQ,KAAK,IAAIP,QAAQ,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd;AAJ7B;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAMP,MAAM,CAAE,8CAA6CH,KAAM,EAArD,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,EAQGI,SAAS,gBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAJ,gBACR;AAAA,gBACGP,IAAI,CAACE,IAAL,CAAUY,GAAV,CAAcC,IAAI,iBACjB;AAAA,+BACE;AAAG,UAAA,IAAI,EAAEA,IAAI,CAACV,GAAd;AAAA,oBAAoBU,IAAI,CAACC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF,SAASD,IAAI,CAACE,QAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA9CQlB,G;;KAAAA,G;AAgDT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Fragment } from 'react/cjs/react.production.min';\n\nfunction App() {\n  const [ data, setData ] = useState({ hits: [] });\n  const [ query, setQuery ] = useState('redux');\n  // const [ search, setSearch ] = useState('');\n  const [ url, setUrl ] = useState('https://hn.algolia.com/api/v1/search?query=redux');\n\n  const[ isLoading, setIsLoading ] = useState(false);\n\n  // Why we don't have useEffect as async function...\n  // Warning: useEffect function must return a cleanup function or nothing. Promises and useEffect(async () => ...) are not supported, but you can call an async function inside an effect..\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n\n      // REST http request\n      const results = await axios(url);\n\n      setData(results.data)\n      setIsLoading(false);\n    };\n    \n\n    fetchData();\n  },[url]);\n\n  return (\n    <Fragment>\n      <input \n        type=\"text\"\n        value={query}\n        placeholder='Search'\n        onChange={event => setQuery(event.target.value)} \n      />\n      <button type='button' onClick={() => setUrl(`https://hn.algolia.com/api/v1/search?query=${query}`)}>Search</button>\n      {isLoading ? (<div>Loading...</div>) : \n        <ol>\n          {data.hits.map(item => (\n            <li key={item.objectID}>\n              <a href={item.url}>{item.title}</a>\n            </li>\n          ))}\n        </ol>\n      }\n    </Fragment>\n\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}