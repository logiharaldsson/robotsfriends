{"ast":null,"code":"var _jsxFileName = \"/Users/logiharaldsson/Desktop/hooks-testing/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react';\nimport { Fragment } from 'react/cjs/react.production.min'; // uuid is universally unique identifier -> for random id/key etc.\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_LIST = [{\n  id: '0',\n  title: 'React with RxJS for State Management Tutorial',\n  url: 'https://www.robinwieruch.de/react-rxjs-state-management-tutorial/'\n}, {\n  id: '1',\n  title: 'React with Apollo and GraphQL Tutorial',\n  url: 'https://www.robinwieruch.de/react-graphql-apollo-tutorial'\n}];\n\nconst App = () => {\n  _s();\n\n  const [list, setList] = React.useState(INITIAL_LIST);\n  const [state, setState] = React.useState({\n    title: '',\n    url: ''\n  });\n\n  function onRemoveItem(id) {\n    const newList = list.filter(item => item.id !== id);\n    setList(newList);\n  }\n\n  function handleAdd() {\n    const newItem = {\n      id: uuidv4(),\n      title: state.title,\n      url: state.url\n    };\n    const newList = list.concat(newItem);\n    setList(newList);\n    setState({\n      title: '',\n      url: ''\n    });\n  }\n\n  function handleChange(event) {\n    const value = event.target.value;\n    setState({ ...state,\n      [event.target.name]: value\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddItem, {\n      state: state,\n      onChange: handleChange,\n      onAdd: handleAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      list: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"h12tlmxm48BSbe7hzEVGWTHRpaY=\");\n\n_c = App;\n\nconst AddItem = _ref => {\n  let {\n    state,\n    onChange,\n    onAdd\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: state.title,\n      placeholder: \"title\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"url\",\n      value: state.url,\n      placeholder: \"url\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onAdd,\n      children: \"Add new link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = AddItem;\n\nconst List = _ref2 => {\n  let {\n    list\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: list.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: item.url,\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => onRemoveItem(item.id),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = List;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AddItem\");\n$RefreshReg$(_c3, \"List\");","map":{"version":3,"sources":["/Users/logiharaldsson/Desktop/hooks-testing/src/App.js"],"names":["React","Fragment","v4","uuidv4","INITIAL_LIST","id","title","url","App","list","setList","useState","state","setState","onRemoveItem","newList","filter","item","handleAdd","newItem","concat","handleChange","event","value","target","name","AddItem","onChange","onAdd","List","map"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport { Fragment } from 'react/cjs/react.production.min';\n\n// uuid is universally unique identifier -> for random id/key etc.\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst INITIAL_LIST = [\n  {\n    id: '0',\n    title: 'React with RxJS for State Management Tutorial',\n    url:\n      'https://www.robinwieruch.de/react-rxjs-state-management-tutorial/',\n  },\n  {\n    id: '1',\n    title: 'React with Apollo and GraphQL Tutorial',\n    url: 'https://www.robinwieruch.de/react-graphql-apollo-tutorial',\n  },\n];\n\n\n\nconst App = () => {\n  const [ list, setList ] = React.useState(INITIAL_LIST);\n  const [ state, setState ] = React.useState({\n    title: '',\n    url: ''\n  })\n\n  function onRemoveItem(id) {\n    const newList = list.filter(item => item.id !== id)\n    setList(newList);\n  }\n\n  function handleAdd() {\n    const newItem = {id: uuidv4(), title: state.title, url: state.url};\n    const newList = list.concat(newItem);\n    setList(newList);\n    setState({title: '', url: ''})\n    \n  }\n\n  function handleChange(event) {\n    \n    const value = event.target.value;\n    setState({\n      ...state,\n      [event.target.name]: value\n    });\n\n  }\n\n  return (\n    <Fragment>\n      <AddItem \n        state={state}\n        onChange={handleChange}\n        onAdd={handleAdd}\n      />\n      <List list={list}/>\n\n\n    </Fragment>\n  );\n}\n\nconst AddItem = ({ state, onChange, onAdd}) => (\n  <div>\n    <input type=\"text\" name='title' value={state.title} placeholder='title' onChange={onChange}/>\n    <input type=\"text\" name='url' value={state.url} placeholder='url' onChange={onChange}/>\n    <button type='button' onClick={onAdd}>Add new link</button>\n  </div>\n);\n\nconst List = ({ list}) => (\n  <ul>\n    {list.map(item => (\n      <li key={item.id}>\n        <a href={item.url}>{item.title}</a>\n        <button type='button' onClick={() => onRemoveItem(item.id)}>Remove</button>\n      </li>\n    ))}\n  </ul>\n);\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}